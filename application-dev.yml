spring:
  profiles:
    active: dev
  redis:
    timeout: 6000ms
    host: 192.168.220.140
    port: 6379
    lettuce:
      pool:
        max-active: 1000
        max-idle: 10
        min-idle: 5
        max-wait: 1000ms
#    password: ${app.redis.password}
  kafka:
    consumer:
      bootstrap-servers: 192.168.220.140:9092,192.168.220.140:9093,192.168.220.140:9094
      group-id: master
      auto-offset-reset: earliest
      max-poll-records: 10
    producer:
      bootstrap-servers: 192.168.220.140:9092,192.168.220.140:9093,192.168.220.140:9094
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  datasource:
    name: cgj
    url: jdbc:mysql://192.168.220.140:3306/cgj?allowMultiQueries=true&useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    # ʹ��druid����Դ
    druid:
      max-active: 20
      initial-size: 1
      max-wait: 60000
      min-idle: 1
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x' FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: false
      max-open-prepared-statements: 20
      # encrypt password
      #filters: config,stat,wall,log4j
      use-global-data-source-stat: true
      connection-init-sqls:
        - set names utf8mb4
        -

  rabbitmq:
    host: 192.168.220.140
    virtual-host: /
    port: 5672
    username: cgj
    password: cgj
  application:
    name: order
mybatis-plus:
  mapper-locations: classpath*:mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

xxl:
  job:
    accessToken:
    executor:
      logretentiondays: 10
      port: 18846
      ip:
      appname: master
      logpath:
    admin:
      addresses: 192.168.220.140:8844/admin
server:
  port: 6061

eureka:
  instance:
    # 主机名称
    hostname: ${spring.cloud.client.ip-address}
    # 自定义实例ID
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    # 显示IP地址
    prefer-ip-address: true
    # 心跳时间，即服务续约间隔时间（缺省为30s）
    lease-renewal-interval-in-seconds: 5
    # 过期剔除时间，即服务续约到期时间（缺省为90s）
    lease-expiration-duration-in-seconds: 10
  client:
    # 是否将eureka自身作为应用注册到eureka注册中心
    register-with-eureka: true
    # 客户端是否获取eureka服务器注册表上的注册信息，默认为true
    fetch-registry: true
    # 设置拉取服务注册信息时间（缺省为60s）
    registry-fetch-interval-seconds: 30
    # Eureka服务
    serviceUrl:
      #服务注册中心地址
      defaultZone: http://192.168.220.130:8761/eureka
    enabled: true

management:
  endpoints:
    web:
      exposure:
        include: '*'
